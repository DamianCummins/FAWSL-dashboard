{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/common/Heatmap/index.js","components/common/Heatmap/Heatmap.js","components/FilterForm/index.js","components/FilterForm/FilterForm.js","components/DashboardContainer/index.js","components/DashboardContainer/DashboardContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","aria-label","href","prefix","Heatmap","props","getPositionalData","events","playerName","filter","evt","location","player","name","map","x","y","getHeatmapSectors","locations","noOfColumns","noOfRows","sectorWidth","sectorHeight","sectors","sector","xCount","yCount","count","x1","x2","y1","y2","loc","renderScatterChart","data","heatSectors","scale","width","height","margin","top","right","bottom","left","r","stroke","fill","fillOpacity","index","key","strokeOpacity","type","dataKey","hide","domain","cursor","strokeDasharray","console","log","state","bind","this","className","style","playerPosition","React","Component","FilterForm","setMatch","match","selectedItem","setState","setPlayers","players","selectedItems","ComboBox","id","title","titleText","helperText","light","items","matches","itemToString","item","home_team","home_team_name","home_score","away_team","away_team_name","away_score","onChange","MultiSelect","Filterable","disabled","length","DashboardContainer","fetch","match_id","then","response","json","matchData","event","tactics","homeTeam","find","team","awayTeam","lineup","catch","err","error","selectedPlayers","match_date","class","position","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8981c30.chunk.js","sourcesContent":["import Header from \"./Header\";\nexport default Header;","import React from \"react\";\nimport {\n    Header,\n    HeaderName,\n    HeaderNavigation,\n    HeaderGlobalBar,\n    SkipToContent,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nconst AppHeader = () => (\n    <Header aria-label=\"FAWSL Analytics Dashboard\">\n        <SkipToContent />\n            <HeaderName href=\"/\" prefix=\"FAWSL\">\n                Analytics Dashboard\n            </HeaderName>\n            <HeaderNavigation aria-label=\"Header\">\n            </HeaderNavigation>\n        <HeaderGlobalBar />\n    </Header>\n);\n\nexport default AppHeader;","import Heatmap from \"./Heatmap\";\nexport default Heatmap;","import React from \"react\";\nimport { \n    ReferenceDot, \n    ReferenceLine, \n    ReferenceArea, \n    ScatterChart, \n    Scatter, \n    CartesianGrid, \n    Tooltip, \n    XAxis, \n    YAxis\n} from \"recharts\";\nimport \"./Heatmap.scss\";\n\nexport default class Heatmap extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        const locations = this.getPositionalData(this.props.data, this.props.playerName);\n        const heatSectors = this.getHeatmapSectors(locations, 4, 4);\n\n        this.state = {\n            locations,\n            heatSectors,\n            playerName: this.props.playerName,\n            scale: this.props.scale ? this.props.scale : 5\n        };\n\n        this.renderScatterChart = this.renderScatterChart.bind(this);\n    }\n\n    getPositionalData = (events, playerName) => {\n        const locations = events.filter(evt => {\n            return evt.location && evt.player && evt.player.name === playerName;\n        }).map(evt => {\n            return {\n                x: evt.location[0],\n                y: evt.location[1]\n            }\n        });\n        return locations;\n    }\n\n    getHeatmapSectors = (locations, noOfColumns, noOfRows) => {\n        const sectorWidth = 120 / noOfColumns;\n        const sectorHeight = 80 / noOfRows;\n    \n        let sectors = []\n        let sector = 0;\n        let xCount = 0;\n        while (xCount < 120) {\n            let yCount = 0;\n            while(yCount < 80) {\n                sectors[sector] ={\n                    count: 0,\n                    x1: xCount,\n                    x2: xCount + sectorWidth,\n                    y1: yCount,\n                    y2: yCount + sectorHeight\n                };\n                for(let loc of locations) {\n                    if((loc.x > xCount && loc.x < (xCount + sectorWidth)) &&\n                        (loc.y > yCount && loc.y <= (yCount + sectorHeight))) {\n                        sectors[sector].count++;\n                    }\n                };\n                yCount += sectorHeight;\n                sector++;\n            }\n            xCount += sectorWidth;\n            sector++;\n        }\n        return sectors;\n    }\n\n    renderScatterChart = (data, heatSectors, scale) => (\n        <ScatterChart\n            width={120*scale}\n            height={80*scale}\n            margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n            }}\n        >\n            <ReferenceDot x={12} y={40} r={10*scale} stroke=\"black\"/>\n            <ReferenceDot x={60} y={40} r={10*scale} stroke=\"black\"/>\n            <ReferenceDot x={108} y={40} r={10*scale} stroke=\"black\"/>\n            <ReferenceArea x1={0} x2={18} y1={18} y2={80-18} fill=\"white\" fillOpacity={1} stroke=\"black\"/>\n            <ReferenceArea x1={102} x2={120} y1={18} y2={80-18} fill=\"white\" fillOpacity={1} stroke=\"black\"/>\n            <ReferenceArea x1={0} x2={6} y1={30} y2={80-30} fill=\"white\" fillOpacity={1} stroke=\"black\"/>\n            <ReferenceArea x1={114} x2={120} y1={30} y2={80-30} fill=\"white\" fillOpacity={1} stroke=\"black\"/>\n            {\n                heatSectors.map((sector, index) => (\n                    <ReferenceArea \n                        key={index}\n                        x1={sector.x1}\n                        x2={sector.x2}\n                        y1={sector.y1}\n                        y2={sector.y2} \n                        fill=\"green\"\n                        fillOpacity={(sector.count / 100) * 2}\n                        stroke=\"white\"\n                        strokeOpacity={0}\n                    />\n                ))\n            }\n            <ReferenceDot x={60} y={40} r={0.5*scale} fill=\"black\" stroke=\"black\"/>\n            <ReferenceDot x={12} y={40} r={0.5*scale} fill=\"black\" stroke=\"black\"/>\n            <ReferenceDot x={108} y={40} r={0.5*scale} fill=\"black\" stroke=\"black\"/>\n            <CartesianGrid />\n            <ReferenceLine x={60} stroke=\"black\"/>\n            <ReferenceArea x1={0} x2={0.1} y1={36} y2={80-36} fill=\"black\" fillOpacity={1} stroke=\"black\"/>\n            <ReferenceArea x1={119.9} x2={120} y1={36} y2={80-36} fill=\"black\" fillOpacity={1} stroke=\"black\"/>\n            <XAxis type=\"number\" dataKey=\"x\" hide domain={[0,120]}/>\n            <YAxis type=\"number\" dataKey=\"y\" hide domain={[0,80]}/>\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter name=\"Heatmap\" data={data} fill=\"#777777\" />\n        </ScatterChart>\n    );\n\n    render() {\n        const { locations, heatSectors, scale } = this.state;\n        return (\n            <div className=\"heatmap\" style={{width: 120 * scale}}>\n                <h3>{this.props.playerName} ({this.props.playerPosition})</h3>\n                {this.renderScatterChart(locations, heatSectors, scale)}\n            </div>\n        );\n    }\n}","import FilterForm from \"./FilterForm\";\nexport default FilterForm;","import React from \"react\";\nimport { ComboBox, MultiSelect } from \"carbon-components-react\";\nimport \"./FilterForm.scss\";\n\nexport default class FilterForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            match: null,\n            players: []\n        }\n\n        this.setMatch = this.setMatch.bind(this);\n    }\n\n    setMatch = (match) => {\n        this.props.setMatch(match.selectedItem)\n        this.setState({\n            match: match.selectedItem\n        });\n    }\n\n    setPlayers = (players) => {\n        this.props.setPlayers(players.selectedItems)\n        this.setState({\n            players: players.selectedItem\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"filterForm\">\n                <ComboBox\n                    id=\"MatchSelector\"\n                    title=\"Match:\"\n                    titleText=\"Match\"\n                    helperText=\"Select a match\"\n                    light\n                    items={this.props.matches}\n                    itemToString={item => (item ? `${item.home_team.home_team_name} (${item.home_score}) vs ${item.away_team.away_team_name} (${item.away_score})` : \"\")}\n                    onChange={this.setMatch}\n                />\n                <MultiSelect.Filterable\n                    id=\"PlayerSelector\"\n                    title=\"Players\"\n                    titleText=\"Players:\"\n                    helperText=\"Select players to compare\"\n                    light\n                    disabled={(!this.state.match && !this.props.players) || this.props.players.length === 0}\n                    items={this.props.players}\n                    itemToString={item => (item && item.player ? item.player.name : \"\")}\n                    onChange={this.setPlayers}\n                />\n            </div>\n        );\n    }\n}","import DashboardContainer from \"./DashboardContainer\";\nexport default DashboardContainer;","import React from \"react\";\nimport { Heatmap } from \"../common\";\nimport FilterForm from \"../FilterForm\";\nimport \"./DashboardContainer.scss\";\nimport matches from \"../../data/4.json\";\n\nexport default class DashboardContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            players: [],\n            selectedPlayers: [],\n            match: null,\n            matchData: [],\n            homeTeam: null,\n            awayTeam: null\n        };\n\n        this.setMatch = this.setMatch.bind(this);\n        this.setPlayers = this.setPlayers.bind(this);\n    }\n\n    setMatch = (match) => {\n        this.setState({\n            match\n        });\n        if (match) {\n            fetch(`https://raw.githubusercontent.com/statsbomb/open-data/master/data/events/${match.match_id}.json`)\n                .then(response => response.json())\n                .then(matchData => {\n                    console.log(matchData.filter(event => event.tactics))\n                    const homeTeam = matchData.filter(event => event.tactics).find(event => event.team.name === match.home_team.home_team_name);\n                    const awayTeam = matchData.filter(event => event.tactics).find(event => event.team.name === match.away_team.away_team_name);\n                    this.setState({\n                        matchData,\n                        homeTeam,\n                        awayTeam,\n                        players: [...homeTeam.tactics.lineup, ...awayTeam.tactics.lineup]\n                    });\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        }\n    }\n\n    setPlayers = (selectedPlayers) => {\n        console.log(selectedPlayers);\n        this.setState({\n            selectedPlayers: selectedPlayers\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"dashboardContainer\">\n                <FilterForm \n                    matches={matches}\n                    setMatch={this.setMatch}\n                    players={this.state.players}\n                    setPlayers={this.setPlayers}\n                />\n                {this.state.match ? \n                    <div>\n                        <h2>{this.state.match.home_team.home_team_name} ({this.state.match.home_score}) vs {this.state.match.away_team.away_team_name} ({this.state.match.away_score})</h2>\n                        <h3>Date: {this.state.match.match_date}</h3>\n                        <div className=\"chartGrid\">\n                            <div class=\"bx--grid\">\n                                <div class=\"bx--row\">\n                                {this.state.selectedPlayers ?\n                                    this.state.selectedPlayers.map(player => (\n                                        <div class=\"bx--col\">\n                                            <Heatmap \n                                                data={this.state.matchData}\n                                                playerName={player.player.name}\n                                                playerPosition={player.position.name}\n                                            />\n                                        </div>)) : <div /> \n                                }\n                                </div>\n                            </div>\n                        </div>\n                    </div> : <div/>\n                }      \n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Header from \"./components/Header\";\nimport DashboardContainer from \"./components/DashboardContainer\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <DashboardContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}